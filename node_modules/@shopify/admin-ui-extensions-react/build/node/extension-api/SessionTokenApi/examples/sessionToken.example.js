"use strict";

var _react = _interopRequireWildcard(require("react"));

var _adminUiExtensionsReact = require("@shopify/admin-ui-extensions-react");

var _jsxRuntime = require("react/jsx-runtime");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function App() {
  const {
    getSessionToken
  } = (0, _adminUiExtensionsReact.useSessionToken)();
  const [token, setToken] = (0, _react.useState)('');
  (0, _react.useEffect)(() => {
    getSessionToken().then(newToken => {
      setToken(newToken);
    });
  }, []);
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_adminUiExtensionsReact.TextField, {
    label: "Session Token",
    value: token,
    disabled: true
  });
}

(0, _adminUiExtensionsReact.extend)('Admin::Product::SubscriptionPlan::Add', (0, _adminUiExtensionsReact.render)(() => /*#__PURE__*/(0, _jsxRuntime.jsx)(App, {})));