declare type Size = 'small' | 'base' | 'medium' | 'large' | 'extraLarge';
declare type Variation = 'positive' | 'negative' | 'strong' | 'subdued' | 'code';
export interface TextBlockProps {
    /** Size of the text */
    size?: Size;
    /** Give text additional visual meaning */
    variation?: Variation;
}
/**
 * TextBlock is used to render a block of text that occupies the full width available.
 * Usually used to render paragraphs of text.
 */
export declare const TextBlock: "TextBlock" & {
    readonly type?: "TextBlock" | undefined;
    readonly props?: TextBlockProps | undefined;
    /** Size of the text */
    readonly children?: true | undefined;
};
export {};
//# sourceMappingURL=TextBlock.d.ts.map